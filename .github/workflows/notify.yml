name: Notify when website changes

on:
  schedule:
    - cron:  '*/30 5-21 * * *' # every 15min
  workflow_dispatch:

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3

      - id: set-matrix
        run: |
          matrix=$(./workflow/matrix.sh | jq -c '.')
          echo $matrix
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  notify:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix: ${{fromJSON(needs.build-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3
          if [ "${{ matrix.type }}" = "dynamic" ] ; then
                sudo apt-get install chromium-browser
          fi
      
      - name: Check website
        id: website
        run: |
          echo "Old hash: ${{ matrix.hash }}"
          echo "URL: ${{ matrix.url }}, selector: ${{ matrix.selector }}"
          new_hash=$(./website_hash.py -u "${{ matrix.url }}" -s "${{ matrix.selector }}" -t "${{ matrix.type }}")
          echo $new_hash
          mkdir hashes
          echo $new_hash > hashes/${{ matrix.hash }}.txt
          echo "new_hash=$new_hash" >> $GITHUB_OUTPUT
          
      - name: Has the hash changed?
        run: |
          echo "Old hash: ${{ matrix.hash }}"
          echo "New hash: ${{ steps.website.outputs.new_hash }}"

      - name: Upload hash as artifact
        uses: actions/upload-artifact@v3
        with:
          name: hashes
          path: hashes/${{ matrix.hash }}.txt

      - name: Notify telegram about website changes
        if: steps.website.outputs.new_hash != matrix.hash
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ðŸŸ¢ Website changed: [${{matrix.label }}](${{ matrix.url }})

      - name: Increase error count if necessary
        if: ${{ failure() }}
        run: ./workflow/update_from_artifacts.sh ${{ matrix.hash }}
      
      - name: Commit and push to repo
        if: ${{ failure() }}
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: main
          name: GitHub Action Bot
          email: website-monitor@metaodi.ch
          commit-message: Update website.csv with error count
          rebase: 'true'
      
      - name: Notify telegram failure
        if: ${{ failure()  && matrix.error_count > 4 }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ðŸ”´ [Website check for Â«${{ matrix.label }}Â» failed](https://github.com/metaodi/website-monitor/actions/runs/${{ github.run_id }}?check_suite_focus=true)
  
  update_hashes:
    needs: notify
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3

      - name: Download hashes
        uses: actions/download-artifact@v3
        with:
          name: hashes
          path: hashes

      - name: Update hashes
        run: ./workflow/update_from_artifacts.sh
          
      - name: Check if there are changes in the repo
        run: |
            git status --porcelain
            if [[ -z $(git status --porcelain) ]];
            then
              echo "Repo is clean"
              echo "changed=0" >> $GITHUB_OUTPUT
            else
              echo "Repo is dirty"
              echo "changed=1" >> $GITHUB_OUTPUT
            fi
        id: changes
         
      - name: Commit and push to repo
        if: steps.changes.outputs.changed == 1 # only try to commit if there are actually changes
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: main
          name: GitHub Action Bot
          email: website-monitor@metaodi.ch
          commit-message: Update website.csv with updated hashes
          rebase: 'true'

      - name: Notify telegram failure
        if: ${{ failure()  || cancelled() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ðŸ”´ [Website Checker Job Failed](https://github.com/metaodi/website-monitor/actions/runs/${{ github.run_id }}?check_suite_focus=true)
