name: Notify when website changes

on:
  schedule:
    - cron:  '*/15 * * * *' # every 15min
  workflow_dispatch:

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3

      - id: set-matrix
        run: |
          matrix=$(./matrix.sh | jq -c '.')
          echo $matrix
          echo "::set-output name=matrix::$matrix"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  notify:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.build-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3
          if [ "${{ matrix.type }}" = "dynamic" ] ; then
                sudo apt-get install chromium-browser
          fi
      
      - name: Check website
        id: website
        run: |
          echo "Old hash: ${{ matrix.hash }}"
          echo "URL: ${{ matrix.url }}, selector: ${{ matrix.selector }}"
          new_hash=$(./website_hash.py -u "${{ matrix.url }}" -s "${{ matrix.selector }}" -t "${{ matrix.type }}")
          echo $new_hash
          echo "::set-output name=new_hash::$new_hash"
          
      - name: Has the hash changed?
        run: |
          echo "Old hash: ${{ matrix.hash }}"
          echo "New hash: ${{ steps.website.outputs.new_hash }}"
      
      # - name: Check if there are changes in the repo
      #   run: |
      #     git status --porcelain
      #     if [[ -z $(git status --porcelain) ]];
      #     then
      #       echo "Repo is clean"
      #       echo '::set-output name=changed::0'
      #     else
      #       echo "Repo is dirty"
      #       echo '::set-output name=changed::1'
      #     fi
      #   id: changes
      #   
      # - name: Commit and push to repo
      #   if: steps.changes.outputs.changed == 1 # only try to commit if there are actually changes
      #   uses: github-actions-x/commit@v2.9
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     push-branch: main
      #     name: GitHub Action Bot
      #     email: oderbolz@gmail.com
      #     commit-message: Update website.csv with updated hashes
      #     rebase: 'true'

      - name: Notify telegram about website changes
        if: ${{ steps.website.outputs.new_hash }} != ${{ matrix.hash }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ðŸŸ¢ Website changed: [${{matrix.label }}](${{ matrix.url }})"

      - name: Notify telegram failure
        if: ${{ failure()  || cancelled() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ðŸ”´ [Website Checker Job Failed](https://github.com/metaodi/website-monitor/actions/runs/${{ github.run_id }}?check_suite_focus=true)
